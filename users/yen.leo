<?xml version="1.0" encoding="utf-8"?>
<!-- Created by Leo: http://leoeditor.com/leo_toc.html -->
<leo_file xmlns:leo="http://leoeditor.com/namespaces/leo-python-editor/1.1" >
<leo_header file_format="2" tnodes="0" max_tnode_index="0" clone_windows="0"/>
<globals body_outline_ratio="0.5" body_secondary_ratio="0.5">
	<global_window_position top="50" left="50" height="500" width="700"/>
	<global_log_window_position top="0" left="0" height="0" width="0"/>
</globals>
<preferences/>
<find_panel_settings/>
<vnodes>
<v t="yen.20170108171605.1"><vh>@settings</vh>
<v t="yen.20170108171605.2"><vh>@data qt-gui-plugin-style-sheet</vh></v>
<v t="yen.20170108171605.3"><vh>@string initial_split_orientation = horizontal</vh></v>
</v>
<v t="yen.20170108171622.1"><vh>有關 2017fall CADP &amp; CP</vh></v>
<v t="yen.20170108171733.1" a="E"><vh>@path ../</vh>
<v t="leo.20170912150642.1" a="E"><vh>近端無 disqus</vh>
<v t="yen.20170108171733.2"><vh>@button pelican-blog</vh></v>
</v>
<v t="leo.20170912150710.1" a="E"><vh>有 disqus 論壇</vh>
<v t="leo.20170912150710.2"><vh>@button github-blog</vh></v>
</v>
<v t="yen.20170108171733.3"><vh>@edit README.md</vh></v>
<v t="yen.20170108171733.4"><vh>@edit .gitignore</vh></v>
<v t="yen.20170108171733.5" a="E"><vh>Pelican 設定</vh>
<v t="leo.20170912145121.1" a="E"><vh>近端</vh>
<v t="yen.20170108171733.6"><vh>@edit local_publishconf.py</vh></v>
</v>
<v t="leo.20170912145144.1" a="E"><vh>遠端</vh>
<v t="leo.20170912145153.1"><vh>@edit publishconf.py</vh></v>
</v>
<v t="leo.20170912145133.1"><vh>共用</vh></v>
<v t="yen.20170108171733.7"><vh>@edit pelicanconf.py</vh></v>
</v>
<v t="yen.20170224232341.1" a="E"><vh>編輯 template</vh>
<v t="yen.20170224232341.2" a="E"><vh>@path theme/pelican-bootstrap3_local/templates</vh>
<v t="yen.20170224232341.3"><vh>@edit base.html</vh></v>
</v>
<v t="leo.20170912210747.1" a="E"><vh>@path theme/pelican-bootstrap3/templates</vh>
<v t="leo.20170912210747.2"><vh>@edit search.html</vh></v>
<v t="leo.20170912210747.3"><vh>@edit base.html</vh></v>
<v t="leo.20170912210747.4"><vh>@edit article.html</vh></v>
</v>
</v>
<v t="yen.20170108171733.8" a="E"><vh>@clean index.html</vh>
<v t="yen.20170108171733.9" a="E"><vh>html</vh>
<v t="yen.20170108171733.10"><vh>head</vh></v>
<v t="yen.20170108171733.11" a="E"><vh>body</vh>
<v t="yen.20170108171733.12" a="E"><vh>reveal div</vh>
<v t="yen.20170108171733.13" a="E"><vh>slides div</vh>
<v t="yen.20170108171733.14"><vh>封面投影片</vh>
<v t="yen.20170108171733.15"><vh>封面投影片內容</vh></v>
</v>
<v t="leo.20171116155618.1"><vh>課業流程</vh>
<v t="leo.20171116155837.1"><vh>內容</vh></v>
</v>
<v t="yen.20170108171733.16"><vh>W1-W3</vh>
<v t="leo.20171106205152.1" a="E"><vh>大綱</vh>
<v t="leo.20171106205803.1"><vh>內容</vh></v>
</v>
<v t="leo.20171108213347.1" a="E"><vh>如何培養創造力</vh>
<v t="leo.20171108213409.1"><vh>內容</vh></v>
</v>
<v t="leo.20171108213543.1" a="E"><vh>機械設計本質</vh>
<v t="leo.20171108213611.1"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20171106204943.1"><vh>W4-W6</vh>
<v t="leo.20171108213739.1" a="E"><vh>上課大剛</vh>
<v t="leo.20171108213803.1"><vh>內容</vh></v>
</v>
<v t="leo.20171108214552.1" a="E"><vh>如何新增網誌</vh>
<v t="leo.20171108214613.1"><vh>內容</vh></v>
</v>
<v t="leo.20171108225408.1" a="E"><vh>Python3 程式語法練習</vh>
<v t="leo.20171108225445.1"><vh>內容</vh></v>
</v>
<v t="leo.20170911091508.1" a="E"><vh>Python 與 C/C++</vh>
<v t="leo.20170911091508.2"><vh>程式學習順序</vh></v>
</v>
<v t="leo.20170911091622.1"><vh>如何學好 Python3</vh>
<v t="leo.20170911091622.2"><vh>Python3 學習</vh></v>
</v>
<v t="leo.20171116224159.1" a="E"><vh>eric6</vh>
<v t="leo.20171116224318.1"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20171106205233.1"><vh>W7-W9</vh>
<v t="leo.20171108222310.1" a="E"><vh>上課大綱</vh>
<v t="leo.20171108222333.1"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20180109223124.1" a="E"><vh>W10-W12</vh>
<v t="leo.20180109223248.1" a="E"><vh>上課大綱</vh>
<v t="leo.20180109223350.1"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20180109223626.1" a="E"><vh>W13-W15</vh>
<v t="leo.20180109223645.1" a="E"><vh>上課大綱</vh>
<v t="leo.20180109223703.1"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20180109224351.1" a="E"><vh>W16-W18</vh>
<v t="leo.20180109224516.1" a="E"><vh>上課大綱</vh>
<v t="leo.20180109224517.1"><vh>內容</vh></v>
</v>
</v>
<v t="leo.20171116011151.1"><vh>上課筆記</vh>
<v t="leo.20171116011249.1"><vh>首頁</vh>
<v t="leo.20171116012137.1"><vh>內文</vh></v>
</v>
<v t="leo.20171116012159.1" a="E"><vh>筆記1</vh>
<v t="leo.20171116012230.1"><vh>內文</vh></v>
</v>
<v t="leo.20171116012522.1" a="E"><vh>筆記2</vh>
<v t="leo.20171116012719.1"><vh>內文</vh></v>
</v>
<v t="leo.20171116012520.1" a="E"><vh>筆記3</vh>
<v t="leo.20171116012723.1"><vh>內文</vh></v>
</v>
<v t="leo.20171116012517.1" a="E"><vh>筆記4</vh>
<v t="leo.20171116012726.1"><vh>內文</vh></v>
</v>
<v t="leo.20171116012505.1" a="E"><vh>筆記5</vh>
<v t="leo.20171116012729.1"><vh>內文</vh></v>
</v>
<v t="leo.20171116013044.1" a="E"><vh>筆記6</vh>
<v t="leo.20171116013118.1"><vh>內文</vh></v>
</v>
</v>
<v t="leo.20171108222446.1" a="E"><vh>心得</vh>
<v t="leo.20171108222540.1"><vh>內容</vh></v>
</v>
<v t="leo.20170911090822.1"><vh>隨身碟內容介紹</vh>
<v t="leo.20170911090822.2"><vh>Win 64 位元專用</vh></v>
</v>
<v t="leo.20170911091459.1"><vh>Python 與程式設計</vh>
<v t="leo.20170911100148.1"><vh>如何學習 CAD</vh>
<v t="leo.20170911100148.2"><vh>CAD 學習</vh></v>
</v>
<v t="leo.20170911100657.1"><vh>MCADP 實習</vh>
<v t="leo.20170911100657.2"><vh>電腦輔助設計實習</vh></v>
</v>
</v>
<v t="leo.20170911093601.1" a="E"><vh>W1 練習</vh>
<v t="leo.20170911093601.2" a="E"><vh>隨身系統練習</vh>
<v t="leo.20170911093601.3"><vh>Python 3.6 程式環境</vh></v>
</v>
<v t="leo.20170911093601.4"><vh>練習 Fossil SCM</vh>
<v t="leo.20170911093601.5"><vh>了解 Fossil SCM</vh></v>
</v>
<v t="leo.20170913103008.1" a="E"><vh>Fossil SCM 功能說明</vh>
<v t="leo.20170913103008.2"><vh>Fossil SCM 功能</vh></v>
</v>
<v t="leo.20170913103534.1" a="E"><vh>採用 SCM 的目標 1/2</vh>
<v t="leo.20170913103534.2"><vh>SCM 的目標 1/2</vh></v>
</v>
<v t="leo.20170913103707.1" a="E"><vh>採用 SCM 的目標 2/2</vh>
<v t="leo.20170913103707.2"><vh>SCM 的目標 2/2</vh></v>
</v>
<v t="leo.20170913104957.1" a="E"><vh>總結 SCM 的目標</vh>
<v t="leo.20170913104957.2"><vh>SCM 的整體目標</vh></v>
</v>
</v>
<v t="leo.20170911095149.1"><vh>課程評分</vh>
<v t="leo.20170911095149.2" a="E"><vh>課程評分</vh>
<v t="leo.20170911095149.3"><vh>如何評分</vh></v>
</v>
<v t="leo.20170911095149.4" a="E"><vh>課程實習分組</vh>
<v t="leo.20170911095149.5"><vh>如何分組</vh></v>
</v>
</v>
<v t="leo.20170911090052.1" a="E"><vh>快捷鍵</vh>
<v t="leo.20170911090052.2"><vh>投影片快捷鍵</vh></v>
</v>
<v t="yen.20170108171733.64" a="E"><vh>各式內容引用範例</vh>
<v t="yen.20170108171733.65" a="E"><vh>導入數學符號與方程式</vh>
<v t="yen.20170108171733.66"><vh>LaTeX 格式方程式</vh></v>
</v>
<v t="yen.20170108171733.67" a="E"><vh>導入縮排程式碼</vh>
<v t="yen.20170108171733.68"><vh>引用程式碼</vh></v>
</v>
<v t="yen.20170108171733.69" a="E"><vh>導入影片</vh>
<v t="yen.20170108171733.70"><vh>iframe 導入影片</vh></v>
</v>
</v>
</v>
</v>
</v>
</v>
</v>
<v t="yen.20170108171733.71" a="E"><vh>@path content</vh>
<v t="leo.20171109023304.1"><vh>@edit 20171105.md</vh></v>
<v t="leo.20171116170026.1"><vh>@edit 20171029.md</vh></v>
<v t="leo.20171026090709.1"><vh>@edit 20171026.md</vh></v>
<v t="leo.20171108235546.1"><vh>@edit 20171019.md</vh></v>
<v t="leo.20171108235442.1"><vh>@edit 20171012.md</vh></v>
<v t="leo.20171109012846.1"><vh>@edit 20171007.md</vh></v>
<v t="leo.20171109011227.1"><vh>@clean 20171003.md</vh></v>
<v t="yen.20170920223844.1"><vh>@edit 20170920.md</vh></v>
<v t="yen.20170108171733.81" a="E"><vh>@path pages</vh>
<v t="yen.20170108171733.82"><vh>@edit pages_1.md</vh></v>
</v>
</v>
<v t="yen.20170108171733.83"><vh>產生 .key 與 .crt</vh></v>
</v>
<v t="yen.20170108171930.1"><vh>@button https server</vh></v>
<v t="yen.20170108171939.1"><vh>@button ipv6 https server</vh></v>
<v t="leo.20171109003136.1" a="E"><vh>Recovered Nodes</vh>
<v t="leo.20171109003136.2"><vh>Recovered node "封面投影片" from @clean index.html</vh>
<v t="leo.20171109003136.3"><vh>old:封面投影片</vh></v>
<v t="leo.20171109003136.4"><vh>new:封面投影片</vh></v>
</v>
<v t="leo.20171109003136.5"><vh>Recovered node "封面投影片內容" from @clean index.html</vh>
<v t="leo.20171109003136.6"><vh>old:封面投影片內容</vh></v>
<v t="leo.20171109003136.7"><vh>new:封面投影片內容</vh></v>
</v>
</v>
</vnodes>
<tnodes>
<t tx="leo.20170911090052.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170911090052.2"># 投影片快捷鍵

* 利用箭頭上下前後換頁
* 按 f 鍵進入全螢幕模式 (full screen)
* 按 s 鍵可以顯示投影片筆記 (show)
* 按 o 鍵可以切換單張或全域檢視 (overview)
* 按 b 或 . 鍵可以切換螢幕黑屏 (black)
* 按 Esc 可以退出全螢幕或全域檢視 (Escape)

</t>
<t tx="leo.20170911090822.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170911090822.2"># 隨身碟內容介紹

* Windows 64 位元電腦專用
* 可以在電腦間遊走, 擁有統一的近端操作環境
* USB 碟遊走各電腦, 要小心散播病毒
* 玩線上遊戲, 但不要玩到 USB 中毒
* 打開 c:\mde\python2017fall_36 目錄, 從 start.bat 開始
* Python, C/C++, Fossil SCM, Git, Solvespace, V-rep, Blender
* 夠您玩兩年了

</t>
<t tx="leo.20170911091459.1">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20170911091508.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170911091508.2"># 計算機程式學習順序

* 先學 Python3, 兼學 C/C++
* 了解 WWW 網頁與伺服器架構, 學 Javascript
* 若想再寫手機程式或大型程式, 學 Java
* 其他, 例如: Go, Ruby, Scala, R, Matlab, Mathematica 也都不錯
* 程式就是特定格式的流程,  任何人都必須接觸了解運用
* 計算機程式是與電腦及網路溝通的重要工具, 工程師必備
* 不要再問: 我到底需不需要精熟計算機程式與網路

</t>
<t tx="leo.20170911091622.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170911091622.2"># 如何學好 Python3

* 上課專心聽, 動手練習, 發揮自學力、執行力與想像力
* 工程師可以利用程式, 以協同模式, 預先模擬設計許多產品
* 先學會如何使用 Fossil SCM, 再了解 Pelican 與 Reveal.js
* 利用 Leo Editor 編輯投影片與網誌, 保留學習心得
* 不斷寫, 再不斷寫, 電腦與網路就會是您的好夥伴

</t>
<t tx="leo.20170911093601.1">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20170911093601.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170911093601.3"># 開啟隨身系統

* 點擊 c:\mde\python2017fall_36 目錄中的 start.bat 開啟
* 產生與 c:\mde\python2017fall_36\data 對應的 y:\ 
* 產生專屬的 Dos 指令區與 SciTE 編輯器
* 用瀏覽器, 以 pyqt5 example calculator 關鍵字找 calculator.py
* 將 calculator.py 內容放入 SciTE, 在 c:\tmp 存為 .py 後按 F5 
* 接著用 ansi c hello word 關鍵字找 .c 程式, 放入 SciTE, 存為 .c
* 存檔後, 按下 F5 執行
* SciTE 可以採解譯模式, 執行 Python3 與 ANSI C 程式

</t>
<t tx="leo.20170911093601.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170911093601.5"># 了解 Fossil SCM

* 利用 Fossil SCM 關鍵字查詢, 十分鐘後, 請回答下列問題
* 何謂 SCM? 何謂 Fossil SCM?
* 如何使用 Fossil SCM?
* 用與不用 SCM, 有沒有差別?
* 機械設計工程師為何需要使用 Fossil SCM?


</t>
<t tx="leo.20170911095149.1">&lt;section&gt;
    @others
&lt;/section&gt;


						
</t>
<t tx="leo.20170911095149.2">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170911095149.3"># 課程如何評分

* 出席: 20% (if 全勤: 提問與答題內容*平時表現)
* 平時表現: 30% (隨身碟與倉儲內容 + 每堂筆記內容)
* 驗收考試: 30% (三階段現場錄製操作與心得影片-註記時間與錄製人員學號)
* 驗收簡報: 20% (驗收週各組簡報, 各學員簡報, 根據驗收考試與簡報內容自評與互評)

</t>
<t tx="leo.20170911095149.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170911095149.5"># 依照學號與座位分組

* 分組不是找同學幫您做作業, 應付專題實習
* 分組是為了學習, 如何與豬隊友進行協同
* 全班依學號入座, 每六人一小組, 每三小組為一大組
* 每班提供兩台廣域伺服器, 配合與個人的隨身碟存放資料
* 每一個階段的練習, 都要拍成練習影片, 上傳 Youtube 與 Vimeo
* 影片標題必須冠上校名、系名、課程名與學號


</t>
<t tx="leo.20170911100148.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170911100148.2"># 如何學習 CAD

* CAD 為 Computer Aided Design
* 尤其是 Mechanical Computer Aided Design
* 2D/3D 繪圖是電腦輔助設計的表達方式之一
* 口語、文字、 2D、 3D、 數學與實作表達, 都很重要
* 2D/3D 繪圖採用 Solvespace 與 Onshape
* 熟悉近端與雲端 CAD 後, 可以再用其他  MCAD 工具
* 其他工具包括: SolidWorks, Inventor, Creo Parametric 等

</t>
<t tx="leo.20170911100657.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170911100657.2"># 電腦輔助設計實習

* 利用近端與雲端工具繪製 Nutcraker 曲柄滑塊機構
* 在近端與雲端模擬機構運動, 進行防止干涉運算設計
* 了解如何將 Nutcracker 零件轉入 V-rep 進行模擬
* 利用 Python 程式跨網路操控 V-rep 中的 Nutcracker
* 重複上述步驟, 各組利用連桿與滑塊機構設計循環運動系統
* 利用  TinkerCAD了解 Arduino 實體與網際馬達控制
* 各小組完成一項機電資循環運動系統設計與模擬
* 各大組將評比後的最終設計, 進行實體列印組裝與展示

</t>
<t tx="leo.20170912145121.1"></t>
<t tx="leo.20170912145133.1"></t>
<t tx="leo.20170912145144.1"></t>
<t tx="leo.20170912150642.1"></t>
<t tx="leo.20170912150710.1"></t>
<t tx="leo.20170912150710.2">@language python
import os
#os.system("pelican content -o output -s local_publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o blog -s publishconf.py")
g.es("admin pelican Github 執行完畢")


</t>
<t tx="leo.20170912210747.1"></t>
<t tx="leo.20170913103008.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170913103008.2"># SCM 功能

* SCM 是軟體組成元件與狀態的管理
* 關心要納入那些元件? 如何納入? 元件間如何組合運作?
* 關心目前的狀態如何? 功能是否滿足需求?
* 成員是否團隊合作? 是否創造出協同效益?
* 當狀態產生問題或缺陷, 如何追蹤? 如何改善?
* 成員是否依照規劃, 提供完整的文件、規格與手冊?


</t>
<t tx="leo.20170913103534.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170913103534.2"># SCM 目標 (1/2)

* 辨識 (identification) - 需求、流程與環境的辨識
* 控制 (control) - 批准或拒絕內容的變更
* 會計 (accounting) -  完整保存每個階段所進行的變更
* 審核 (auditing) - 確認建立完整的文件, 需求, 架構, 規範與使用者手冊
* 構建管理 (build) - 管理過程中所需的各類工具



</t>
<t tx="leo.20170913103707.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170913103707.2"># SCM 目標 (2/2)

* 流程管理 (process) - 確認過程融入組織的發展要求
* 環境管理 (environment) - 提供託管內容所需的軟體與硬體
* 團隊合作 (teamwork) - 促進團隊互動協同
* 缺陷追踪 (defect tracking) - 可追溯每個缺陷的源頭


</t>
<t tx="leo.20170913104957.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20170913104957.2"># SCM 的目標

* 以團隊協同合作模式
* 透過詳細的履歷 (清楚註記時間、變更與建立者)
* 完整呈現並管理各階段內容的組成元件與狀態
* 達到資源高效運用, 最佳化軟體&lt;strike&gt;機械設計&lt;/strike&gt;開發過程

</t>
<t tx="leo.20171106204943.1">&lt;section&gt;
    @others
&lt;/section&gt;
</t>
<t tx="leo.20171106205152.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20171106205233.1">&lt;section&gt;
    @others
&lt;/section&gt;
</t>
<t tx="leo.20171106205803.1"># W1-W3

* 準備筆記本、隨身碟與耳機
* 充分了解隨身系統的啟動關機與使用
* 先在近端運作, 然後同桌電腦, 最後區網與雲端
* 了解機械設計本質, 六種表達與如何培養創造力
* 要怎麼收穫, 就那麼栽, 沒有捷徑, 真的沒有捷徑
* 每天紀錄, 自己如何過完人生中這個寶貴的一天
</t>
<t tx="leo.20171108213347.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20171108213409.1">## 創造力的培養

* 自學力

* 想像力

* 執行力
</t>
<t tx="leo.20171108213543.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20171108213611.1">### 機械設計本質, 六種表達與如何培養創造力

* 機→多個零件互相拼湊起來有作用

* 械→有專門的作用

* 設計→表達 

表達的六種方式→口語、文字、2D的表述(圖表、表格)、3D的表述(影片)、理論的表達、實體的表達
</t>
<t tx="leo.20171108213739.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;
</t>
<t tx="leo.20171108213803.1"># W4-W6

* 了解如何製作網誌

* 知道如何編輯網誌

* Python3 程式語法練習

* 初步了解eric6的介面
</t>
<t tx="leo.20171108214552.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;
</t>
<t tx="leo.20171108214613.1">##如何新增網誌

* 用loe更新網誌並且推到近端及遠端
* 利用fossil status檢視目前資料夾狀況
* 利用fossil add .新增
* 利用fossil commit 提交
</t>
<t tx="leo.20171108222310.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;
</t>
<t tx="leo.20171108222333.1"># W7-W9 期中考週

* 錄影錄下如何新增網誌
* 將影片上傳至[YouTube](https://www.youtube.com)與[Vimeo](https://vimeo.com)並嵌入網誌
* 拉出完整的計算機表單
* 期中簡報
</t>
<t tx="leo.20171108222446.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171108222540.1">#學習心得

* 這學期的計算機程式課，無論是自己做一個計算機，又或者是創造一個屬於我們自己的網誌，雖然都是我們不曾接觸過的東西，但在老師的教導下以及回家透過老師的影片複習，讓我們的學習更佳的順利，也讓我們學得更多，更能成為一個對社會有貢獻的人。</t>
<t tx="leo.20171108225408.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;

</t>
<t tx="leo.20171108225445.1">## 用for迴圈寫出簡單的圖形

```
@language python
for i in range(1,5):
    print((5-i)*" "+i*"*")
for i in range(5):    
    print(i*" "+(5-i)*"*")
```
</t>
<t tx="leo.20171109003136.1"></t>
<t tx="leo.20171109003136.2">(uncached) yen.20170108171733.14
Diff...
  &lt;section data-markdown&gt;
      &lt;script type="text/template"&gt;
- 
  @others
      &lt;/script&gt;
  &lt;/section&gt;
  
  
  						
</t>
<t tx="leo.20171109003136.3">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171109003136.4">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;

@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="leo.20171109003136.5">(uncached) yen.20170108171733.15
Diff...
  ## 2017Fall CADP 與 CP
  
  ### 虎科大機械設計工程系
  
  &lt;small&gt;
- Created by [KMOLab](http://kmolab.github.io/blog/)
+ Created by [40623150](https://cpa.kmol.info/40623150/index)
  &lt;/small&gt;
  
- [CADP 與 CP 課程網誌](blog/index.html)
+ ### 40623150仝允丞
  
  
</t>
<t tx="leo.20171109003136.6">## 2017Fall CADP 與 CP

### 虎科大機械設計工程系

&lt;small&gt;
Created by [40623150](https://cpa.kmol.info/40623150/index)
&lt;/small&gt;

### 40623150仝允丞


</t>
<t tx="leo.20171109003136.7">## 2017Fall CADP 與 CP

### 虎科大機械設計工程系

&lt;small&gt;
Created by [KMOLab](http://kmolab.github.io/blog/)
&lt;/small&gt;

[CADP 與 CP 課程網誌](blog/index.html)


</t>
<t tx="leo.20171109011227.1">@language md
Title: 網際 Brython 3.3.4 程式執行環境 
Date: 2017-10-03 11:00
Category: Course
Tags: 2017fall, cp, brython, w4
Slug: 40623150-brython-editor-334
Author: 40623150

Brython 程式環境可以用來練習許多 Python3 的簡單語法, 也可以納入 Javascript 程式庫, 利用 Ajax 模式結合網際瀏覽器與伺服器上的資源解決協同產品設計流程上的問題.

&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;!-- 導入 FileSaver 與 filereader --&gt;
&lt;script type="text/javascript" src="./../ace/FileSaver.min.js"&gt;&lt;/script&gt;
&lt;script type="text/javascript" src="./../ace/filereader.js"&gt;&lt;/script&gt;

&lt;!-- 導入最新版的 Brython 標準程式庫 3.3.4 --&gt;
&lt;script type="text/javascript" src="./../data/Brython-3.3.4/brython_dist.js"&gt;
&lt;/script&gt;


&lt;!-- 啟動 Brython 時, 設定 pythonpath 為 data/py, 並將 script1.py 放入, 以便取代 3.2.9 之前版本的 script id 導入 --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下執行 Brython 程式 --&gt;

### 利用以下的編輯器執行 Python3 程式

在 Firefox 中, 以 Preferences - General - Downloads 選擇 "Always ask me where to save files"

在 Chrome 中, 以 Settings - Advanced - Downloads 選擇 Ask where to save each file before downloading

&lt;script src="./../ace/ace.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
&lt;script src="./../ace/ext-language_tools.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
&lt;script src="./../ace/mode-python3.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
&lt;script src="./../ace/snippets/python.js" type="text/javascript" charset="utf-8"&gt;&lt;/script&gt;
&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;
&lt;script type="text/javascript"&gt;
function doSave(){
    var blob = new Blob([localStorage["py_src"]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById('filename').value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;

&lt;!-- 請注意 Brython 3.3.0 之後的版本, 已經不能使用 script id 模式導入, 改用 pythonpath 中的 script1.py 供後續導入 --&gt;

&lt;script type="text/python3" id="script1"&gt;
import sys
import time
import traceback
import javascript

from browser import document as doc, window, alert

has_ace = True
try:
    editor = window.ace.edit("editor")
    session = editor.getSession()
    session.setMode("ace/mode/python")

    editor.setOptions({
     'enableLiveAutocompletion': True,
     'enableSnippets': True,
     'highlightActiveLine': False,
     'highlightSelectedWord': True
    })
except:
    from browser import html
    editor = html.TEXTAREA(rows=20, cols=70)
    doc["editor"] &lt;= editor
    def get_value(): return editor.value
    def set_value(x):editor.value = x
    editor.getValue = get_value
    editor.setValue = set_value
    has_ace = False

if hasattr(window, 'localStorage'):
    from browser.local_storage import storage
else:
    storage = None

def reset_src():
    if storage is not None and "py_src" in storage:
        editor.setValue(storage["py_src"])
    else:
        editor.setValue('for i in range(10):\n\tprint(i)')
    editor.scrollToRow(0)
    editor.gotoLine(0)

def reset_src_area():
    if storage and "py_src" in storage:
        editor.value = storage["py_src"]
    else:
        editor.value = 'for i in range(10):\n\tprint(i)'

class cOutput:

    def __init__(self,target):
        self.target = doc[target]
    def write(self,data):
        self.target.value += str(data)
        

#if "console" in doc:
sys.stdout = cOutput("console")
sys.stderr = cOutput("console")

def to_str(xx):
    return str(xx)

info = sys.implementation.version
doc['version'].text = 'Brython %s.%s.%s' % (info.major, info.minor, info.micro)

output = ''

def show_console(ev):
    doc["console"].value = output
    doc["console"].cols = 60
    doc["console"].rows = 10

# load a Python script
def load_script(evt):
    _name = evt.target.value + '?foo=%s' % time.time()
    editor.setValue(open(_name).read())

# run a script, in global namespace if in_globals is True
def run(*args):
    global output
    doc["console"].value = ''
    src = editor.getValue()
    if storage is not None:
       storage["py_src"] = src

    t0 = time.perf_counter()
    try:
        #ns = {'__name__':'__main__'}
        ns = {'__name__':'editor'}
        exec(src, ns)
        state = 1
    except Exception as exc:
        traceback.print_exc(file=sys.stderr)
        state = 0
    output = doc["console"].value

    print('&lt;completed in %6.2f ms&gt;' % ((time.perf_counter() - t0) * 1000.0))
    return state

if has_ace:
    reset_src()
else:
    reset_src_area()
    
def clear_console(ev):
    doc["console"].value = ""

def clear_container(ev):
    doc["container"].clear()

doc['run'].bind('click',run)
doc['show_console'].bind('click',show_console)
doc['clear_console'].bind('click',clear_console)
doc['clear_container'].bind('click',clear_container)

&lt;/script&gt;

&lt;div id="version"&gt;&lt;/div&gt;
&lt;div id="editor" style="width:600px;height:300px;"&gt;&lt;/div&gt;

&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;

&lt;form&gt;
    &lt;label&gt;Filename: &lt;input type="text" id="filename" placeholder="input file name"/&gt;.py&lt;/label&gt;
    &lt;input type="submit" value="Save" onclick="doSave();"/&gt;
&lt;/form&gt;
&lt;button id="run"&gt;Run&lt;/button&gt;
&lt;button id="show_console"&gt;Output&lt;/button&gt;
&lt;button id="clear_console"&gt;清除&lt;/button&gt;
&lt;button id="clear_container"&gt;清除畫布&lt;/button&gt;
&lt;div style="width:100%;height:100%;"&gt;
&lt;textarea id="console" autocomplete="off"&gt;&lt;/textarea&gt;
&lt;/div&gt;
&lt;div id="common"&gt;&lt;/div&gt;
&lt;!-- container 主要提供網際繪圖用之畫布 --&gt;
&lt;div id="container"&gt;&lt;/div&gt;
@others</t>
<t tx="leo.20171116011151.1">&lt;section&gt;
    @others
&lt;/section&gt;
</t>
<t tx="leo.20171116011249.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;
</t>
<t tx="leo.20171116012137.1">#課堂筆記</t>
<t tx="leo.20171116012159.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;

 
 </t>
<t tx="leo.20171116012230.1">&lt;img src="https://cpa.kmol.info/40623150/raw/cc1de2c8f33e42b693bac587b71f05b24c33e05386275154d1cf78e9b01a7305?m=image/jpeg" width="660" height="660" &gt;&lt;/a&gt;</t>
<t tx="leo.20171116012505.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;
</t>
<t tx="leo.20171116012517.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;
</t>
<t tx="leo.20171116012520.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;
</t>
<t tx="leo.20171116012522.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;
</t>
<t tx="leo.20171116012719.1">&lt;img src="https://cpa.kmol.info/40623150/raw/d4abafbc9c4fcc879df11d83cdf46411e78661a4a64c0a12bf2c93b39fa7a9fd?m=image/jpeg" width="800" height="660" &gt;&lt;/a&gt;</t>
<t tx="leo.20171116012723.1">&lt;img src="https://cpa.kmol.info/40623150/raw/478b11eca18d02367bbd167f63da16c1948f1383dd0ff0972111f7dc81c0b505?m=image/jpeg" width="800" height="660" &gt;&lt;/a&gt;</t>
<t tx="leo.20171116012726.1">&lt;img src="https://cpa.kmol.info/40623150/raw/160275bae7510a4ff892a2a14647ba06e8497b97ee345f218e17e21b10654df0?m=image/jpeg" width="660" height="660" &gt;&lt;/a&gt;</t>
<t tx="leo.20171116012729.1">&lt;img src="https://cpa.kmol.info/40623150/raw/50272b04d2e676644162032c4f7544bdd0b78fd85180851cadb041973521ccf1?m=image/jpeg" width="660" height="660" &gt;&lt;/a&gt;</t>
<t tx="leo.20171116013044.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;
</t>
<t tx="leo.20171116013118.1">&lt;img src="https://cpa.kmol.info/40623150/raw/73855c62d64c51af54b5c7522dd1c343164a0d3272625bb03f564bc85bf5aa4e?m=image/jpeg" width="660" height="660" &gt;&lt;/a&gt;</t>
<t tx="leo.20171116155618.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;

@others
    &lt;/script&gt;
&lt;/section&gt;</t>
<t tx="leo.20171116155837.1">###W1~W3
* [課前須知](https://cpa.kmol.info/40623150/doc/trunk/index.html#/1)
* [了解機械設計的本質](https://cpa.kmol.info/40623150/doc/trunk/index.html#/1/2)

###W4~W6
* [網誌製作](https://cpa.kmol.info/40623150/doc/trunk/index.html#/2/1)
* [如何學好 Python3](https://cpa.kmol.info/40623150/doc/trunk/index.html#/2/4)
* [Python3 程式語法練習](https://cpa.kmol.info/40623150/doc/trunk/index.html#/2/2)
* [初步認識eric6](https://cpa.kmol.info/40623150/doc/trunk/index.html#/4/5)

###W7~W9
* [W7-Exam](https://cpa.kmol.info/40623150/doc/trunk/blog/40623150-2017-fall-cp-w7-exam.html)
* [W8-Exam](https://cpa.kmol.info/40623150/doc/trunk/blog/40623150-2017-fall-cp-exam-1.html)
* [W9-Exam](https://cpa.kmol.info/40623150/doc/trunk/blog/40623150-2017-fall-cp-exam-2.html)</t>
<t tx="leo.20171116224159.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


				</t>
<t tx="leo.20171116224318.1">##eric6
&lt;img src="https://cpa.kmol.info/40623150/raw/756afd32ee6be96f558d113f4b5f0da8f4161bf3d9269df84c511e532211587e?m=image/png" width="660" height="500" &gt;&lt;/a&gt;</t>
<t tx="leo.20180109223124.1">&lt;section&gt;
    @others
&lt;/section&gt;
</t>
<t tx="leo.20180109223248.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;
</t>
<t tx="leo.20180109223350.1">#W10-W12

* 新增 github 帳號

* 綁定後至Y槽並拉至SciTE檢查

* 綁定 git config --global user.name "學號 "

* 綁定 git config --global user.name "email "

* Qt Disign 數學運算邏輯概念
</t>
<t tx="leo.20180109223626.1">&lt;section&gt;
    @others
&lt;/section&gt;
</t>
<t tx="leo.20180109223645.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;
</t>
<t tx="leo.20180109223703.1"># W13-W15

* 改版內容資料利用git push推送

* 新增 git add .

* 新增版本 git commit -m "名稱 "

* 建立github協同倉儲

* 以下是和fossil不同的

* 將遠端內容轉至近端用 git pull
</t>
<t tx="leo.20180109224351.1">&lt;section&gt;
    @others
&lt;/section&gt;
</t>
<t tx="leo.20180109224516.1">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;
</t>
<t tx="leo.20180109224517.1">#W16-W18

* 分組期末報告

* 透過分組來做出計算機程式

* 將影片放入 youtube</t>
<t tx="yen.20170108171605.1"></t>
<t tx="yen.20170108171605.2">QTreeWidget {
    /* These apply to the selected item, but not to editing items.*/
    background-color: #ffffec; /* Leo's traditional tree color */
    selection-color: black; /* was white */
    selection-background-color: lightgrey;
    /* font-family: SansSerif; */
    /*font-family: DejaVu Sans Mono;*/
    font-family:YaHei Mono;
    /* 標題字型大小設定 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
 }

/* Headline edit widgets */
QTreeWidget QLineEdit {
    background-color: cornsilk;
    selection-color: white;
    selection-background-color: blue;
    /*font-family: DejaVu Sans Mono;*/    
    font-family:YaHei Mono;
    /* 沒有特別對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The log panes */
QTextEdit {
    background-color: #f2fdff;
    selection-color: red;
    selection-background-color: blue;
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* log font 大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal, italic,oblique */
}

/* The body pane */
QTextEdit#richTextEdit {
    background-color: #fdf5f5; /* A kind of pink. */
    selection-color: white;
    selection-background-color: red;
    /*font-family: DejaVu Sans Mono;*/
    /* font-family: Courier New; */
    font-family:YaHei Mono;
    /* 內文字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

QLabel {
    font-family:YaHei Mono;'CherryPy', 'pytz', 'mako', 'beautifulsoup4', 'pymysql', 'peewee'
    /* 下方的 Minibuffer 標題字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
}

/* Editor labels */
QLineEdit#editorLabel {
    background-color: #ffffec;
    font-family:YaHei Mono;
    /* 沒有直接對應字型大小 */
    font-size: 20px;
    font-weight: normal; /* normal,bold,100,..,900 */
    font-style: normal; /* normal,italic,oblique */
    border: 2px;
    margin: 2px;
}</t>
<t tx="yen.20170108171605.3">horizontal: body pane to the left
vertical: body pane on the botton</t>
<t tx="yen.20170108171622.1">2017 Fall 機械設計工程系 CADP &amp; CP

倉儲位置: https://mde1a1.kmol.info/2017fall

每一協同成員都應該要在 users 目錄下有一個 Leo 檔案

</t>
<t tx="yen.20170108171733.1"></t>
<t tx="yen.20170108171733.10">&lt;head&gt;
    &lt;meta charset="utf-8"&gt;
&lt;title&gt;
2017 Spring 機械設計工程系網際內容管理
&lt;/title&gt;
    &lt;meta name="description" content="A framework for easily creating beautiful presentations using HTML"&gt;
    &lt;meta name="author" content="Hakim El Hattab"&gt;
    
    &lt;meta name="apple-mobile-web-app-capable" content="yes"&gt;
    &lt;meta name="apple-mobile-web-app-status-bar-style" content="black-translucent"&gt;
    
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"&gt;
    
    &lt;link rel="stylesheet" href="data/reveal/reveal.css"&gt;
    &lt;link rel="stylesheet" href="data/reveal/black.css" id="theme"&gt;
    
    &lt;!-- Theme used for syntax highlighting of code --&gt;
    &lt;link rel="stylesheet" href="data/reveal/zenburn.css"&gt;

    &lt;!-- Printing and PDF exports --&gt;
    &lt;script&gt;
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match( /print-pdf/gi ) ? 'data/reveal/pdf.css' : 'data/reveal/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    &lt;/script&gt;

    &lt;!--[if lt IE 9]&gt;
    &lt;script src="data/reveal/html5shiv.js"&gt;&lt;/script&gt;
    &lt;![endif]--&gt;
&lt;/head&gt;

</t>
<t tx="yen.20170108171733.11">&lt;body&gt;
@others
&lt;script src="data/reveal/head.min.js"&gt;&lt;/script&gt;
&lt;script src="data/reveal/reveal.js"&gt;&lt;/script&gt;
&lt;script&gt;
        // More info https://github.com/hakimel/reveal.js#configuration
        Reveal.initialize({
            controls: true,
            progress: true,
            history: true,
            center: true,

            transition: 'slide', // none/fade/slide/convex/concave/zoom

            // More info https://github.com/hakimel/reveal.js#dependencies
            dependencies: [
                { src: 'data/reveal/classList.js', condition: function() { return !document.body.classList; } },
                { src: 'data/reveal/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'data/reveal/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
                { src: 'data/reveal/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
                { src: 'data/reveal/zoom.js', async: true },
                { src: 'data/reveal/notes.js', async: true },
                { src: 'data/reveal/math.js', async: true }
            ]
        });
&lt;/script&gt;
&lt;/body&gt;
</t>
<t tx="yen.20170108171733.12">&lt;div class="reveal"&gt;
@others
&lt;/div&gt;

</t>
<t tx="yen.20170108171733.13">&lt;!-- Any section element inside of this container is displayed as a slide --&gt;
&lt;div class="slides"&gt;
@others
&lt;/div&gt;

</t>
<t tx="yen.20170108171733.14">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;

@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="yen.20170108171733.15">## 2017Fall  CP

### 虎科大機械設計工程系
####設計一甲40623150 仝允丞

&lt;small&gt;
Created by [40623150](https://cpa.kmol.info/40623150/doc/trunk/blog/)
&lt;/small&gt;



</t>
<t tx="yen.20170108171733.16">&lt;section&gt;
    @others
&lt;/section&gt;

						
</t>
<t tx="yen.20170108171733.2">@language python
import os
#os.system("pelican content -o output -s local_publishconf.py -t theme/pelican-bootstrap3")
os.system("pelican content -o blog -s local_publishconf.py")
g.es("admin pelican 近端執行完畢")


</t>
<t tx="yen.20170108171733.5"></t>
<t tx="yen.20170108171733.64">&lt;section&gt;
@others
&lt;/section&gt;
</t>
<t tx="yen.20170108171733.65">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="yen.20170108171733.66"># 數學符號與方程式

Inline math equations go in like so: $\omega = d\phi / dt$. Display
math should get its own line and be put in in double-dollarsigns:

$$I = \int \rho R^{2} dV$$
</t>
<t tx="yen.20170108171733.67">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
&lt;!-- 請注意, @others 不可以內縮 --&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;



						
</t>
<t tx="yen.20170108171733.68">## 利用 Markdown 寫投影片
以下利用 Markdown 格式展示 Python 程式碼:
```
@language python
# use threading and subprocess to threading the make process
import os
import subprocess
import threading

def domake():
    
    path = "../exposed/api/exposed"
    ubuntu = "../Ubuntu"
    
    # create obj path
    
    if not os.path.exists(path+"/../obj"):
        os.makedirs(path+"/../obj")
    
    subprocess.call(["make", "clean"], cwd=path)
    subprocess.call("make", cwd=path)
    subprocess.call(["cp", "{libslvs.so, _slvs.so, slvs.py}", ubuntu], cwd=path)
    subprocess.call(["python3", "circle_ex.py"], cwd=path+"/"+ubuntu)
    
make = threading.Thread(target=domake)
make.start()
```
</t>
<t tx="yen.20170108171733.69">&lt;section data-markdown&gt;
    &lt;script type="text/template"&gt;
@others
    &lt;/script&gt;
&lt;/section&gt;


						
</t>
<t tx="yen.20170108171733.70">## 使用 iframe 導入影片

### 導入影片 template

&lt;iframe src="https://player.vimeo.com/video/183950627" width="640" height="492" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
</t>
<t tx="yen.20170108171733.71"></t>
<t tx="yen.20170108171733.8">@language xml
@tabwidth -4
@others

</t>
<t tx="yen.20170108171733.81"></t>
<t tx="yen.20170108171733.83">sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout localhost.key -out localhost.crt

</t>
<t tx="yen.20170108171733.9">&lt;!doctype html&gt;
&lt;html lang="en"&gt;
@others
&lt;/html&gt;
</t>
<t tx="yen.20170108171930.1">@language python
import os
import subprocess
import threading
import http.server, ssl

def domake():
    # build directory
    os.chdir("./../")
    server_address = ('localhost', 5443)
    httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print(os.getcwd())
    print("5443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170108171939.1">@language python
import os
import subprocess
import threading
import socket
import http.server, ssl

class HTTPServerV6(http.server.HTTPServer):
    address_family = socket.AF_INET6
  
def domake():
    # build directory
    os.chdir("./../")
    ipv6_address = '2001:288:6004:17:3004::808'
    server_address = (ipv6_address, 6443)
    #httpd = http.server.HTTPServer(server_address, http.server.SimpleHTTPRequestHandler)
    httpd = HTTPServerV6(server_address, http.server.SimpleHTTPRequestHandler)
    httpd.socket = ssl.wrap_socket(httpd.socket,
                                   server_side=True,
                                   certfile='localhost.crt',
                                   keyfile='localhost.key',
                                   ssl_version=ssl.PROTOCOL_TLSv1)
    print("6443 https server started")
    httpd.serve_forever()

# 利用執行緒執行 https 伺服器
make = threading.Thread(target=domake)
make.start()</t>
<t tx="yen.20170224232341.1"></t>
<t tx="yen.20170224232341.2"></t>
</tnodes>
</leo_file>
